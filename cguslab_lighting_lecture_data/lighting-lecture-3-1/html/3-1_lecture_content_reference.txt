## 1강: RenderMan 개요 및 기본 렌더 세팅

### 수업 목표

- RenderMan의 핵심 렌더링 방식(Path Tracing)과 아키텍처(RIS)를 직관적으로 이해합니다.
- V-Ray, Arnold 등 다른 렌더러와의 차별점을 통해 RenderMan의 강점을 파악합니다.
- RenderMan의 핵심 인터페이스, 특히 강력한 렌더 뷰어 "It"의 상세 기능과 전문적인 컬러 세팅(ACES) 방법을 익힙니다.
- 깨끗한 이미지를 얻기 위한 가장 중요한 요소인 샘플링(Sampling)의 원리를 배우고, 노이즈를 제어하는 기본 렌더 세팅을 실습합니다.

---

### **1. RenderMan이란 무엇인가? - 빛을 추적하는 여정**

RenderMan은 **Pixar Animation Studios**가 30년 넘게 직접 개발하고 자사 영화 제작에 사용하며 발전시켜 온, 명실상부한 **업계 표준 렌더링 솔루션**입니다. '토이 스토리'부터 최신작에 이르기까지, 우리가 사랑하는 픽사 영화들의 사실적이면서도 아름다운 영상미가 바로 RenderMan을 통해 구현되었습니다.

### **Path Tracing: 빛의 경로를 역추적하는 탐험가**

RenderMan의 핵심은 **Path Tracing(경로 추적)**이라는 정교한 물리 기반 렌더링 알고리즘에 있습니다. 이것을 쉽게 비유해 보겠습니다.

> 여러분의 눈(카메라의 픽셀)에서 아주 작은 탐험가(가상의 광선)를 내보낸다고 상상해 보세요. 이 탐험가는 장면 속으로 날아가 어떤 물체(예: 빨간 공)에 부딪힙니다. 탐험가는 "여기 빨간색 정보가 있군"이라고 기록하고, 거기서 멈추지 않고 물리 법칙에 따라 다른 방향으로 튕겨 나갑니다. 튕겨 나간 탐험가는 이번엔 파란 벽에 부딪히고, "파란색 정보도 있네"라고 추가로 기록합니다. 또 튕겨 나가 천장의 조명에 도달하면, "드디어 광원을 찾았다!"라고 외치며 탐험을 마칩니다.
> 
> 
> 이 탐험가가 지나온 모든 경로(Path)의 정보(빨간 공, 파란 벽, 조명)를 종합하여 최종적으로 여러분의 눈(픽셀)에 들어올 색상을 계산하는 것이 바로 Path Tracing의 원리입니다.
> 

하나의 픽셀에 수백, 수천 명의 탐험가를 보내 각기 다른 경로를 탐험하게 하면, 그 정보들이 모여 매우 사실적인 간접광, 부드러운 그림자, 자연스러운 반사와 굴절이 만들어집니다. 이미지에 보이는 **노이즈**는 탐험가의 수가 부족해서 충분한 정보를 모으지 못했을 때 발생하는 '불확실성'의 결과물입니다.

### **RIS 아키텍처: 최고의 탐험가를 위한 최첨단 장비**

- *RIS (Rix Integration Subsystem)**는 RenderMan의 핵심 엔진 아키텍처입니다. Path Tracing이라는 탐험 방식은 매우 정확하지만 때로는 비효율적일 수 있습니다. RIS는 이 탐험을 더 빠르고, 더 똑똑하고, 더 유연하게 만들어주는 최첨단 장비 세트와 같습니다. 순수한 Path Tracing 뿐만 아니라, 특정 상황에 더 효율적인 다른 계산 방식(Integrator)을 플러그인처럼 쉽게 교체하거나 조합할 수 있게 해줍니다. 이 덕분에 RenderMan은 복잡한 VFX 장면에서도 압도적인 퀄리티와 안정성을 유지할 수 있습니다.

---

### **2. RenderMan vs. V-Ray vs. Arnold**

모두 훌륭한 렌더러지만, 각자의 철학과 강점이 다릅니다.

| 특징 | **RenderMan (Pixar)** | **Arnold (Autodesk)** | **V-Ray (Chaos Group)** |
| --- | --- | --- | --- |
| **핵심 철학/강점** | **VFX 및 장편 애니메이션**을 위한 타협 없는 퀄리티와 유연성. 픽사의 프로덕션에서 검증됨. | 아티스트 친화적인 **단순함과 예측 가능성**. 물리적으로 매우 정확하고 직관적인 결과물. | **속도와 범용성**. 건축, 제품 시각화 등 다양한 분야에서 방대한 에셋 라이브러리와 함께 사용. |
| **차별점** | PxrSurface 셰이더의 독보적인 유연성, 업계 최고 수준의 **Denoise**, **Deep 렌더링** 지원. | Standard Surface 셰이더의 업계 표준화. CPU 렌더링의 강력한 안정성 및 GPU 렌더링 발전. | 빠른 GI 계산, 수많은 렌더 옵션을 통한 세밀한 최적화 가능. V-Ray 재질/에셋 생태계가 강력. |
| **주 사용 분야** | 영화, VFX, 고퀄리티 애니메이션 | 영화, VFX, 광고 | 건축(Archviz), 인테리어, 제품 디자인, 광고 |

Sheets로 내보내기

결론적으로, RenderMan은 '최고의 결과물'을 위해 아티스트에게 가장 강력하고 유연한 도구들을 제공하는 데 초점을 맞춘 렌더러라고 할 수 있습니다.

---

### **3. 핵심 작업 공간: "It" 렌더 뷰어 완전 정복**

RenderMan의 **"It"(Image Tool)**은 단순한 렌더 뷰어가 아닙니다. 렌더링 결과물을 정밀하게 분석하고 문제를 진단하는 **강력한 분석 도구**입니다. 라이팅 아티스트에게는 가장 중요한 작업창이 될 것입니다.

### **가장 중요한 첫 단계: 컬러 스페이스 설정 (ACES)**

프로덕션 환경에서는 반드시 표준화된 컬러 워크플로우를 사용해야 합니다. 우리는 **ACES(Academy Color Encoding System)**를 사용할 것입니다. Maya의 기본 컬러 매니지먼트가 ACES로 설정되어 있다면, "It" 뷰어도 동일하게 맞춰줘야만 정확한 색상을 보며 작업할 수 있습니다.

1. "It" 뷰어를 엽니다. (RenderMan 셸프의 `it` 아이콘 클릭)
2. 상단 메뉴에서 **Edit > Preferences** 로 이동합니다.
3. **Color Management** 탭을 선택합니다.
4. `OCIO Config` 옵션을 **Use Maya's setting**으로 변경합니다.
5. 이제 "It" 뷰어는 Maya 뷰포트와 동일한 ACES 1.2 컬러 스페이스로 이미지를 보여줍니다.

### **"It"의 필수 기능 및 단축키**

- **A/B 비교:** 렌더 세팅이나 라이팅 변경 전후를 비교하는 가장 확실한 방법입니다.
    - **`S` (Snapshot):** 현재 렌더링된 이미지를 버퍼에 저장합니다.
    - **`A`:** 현재 이미지를 A 버퍼로 지정합니다.
    - **`B`:** 스냅샷 이미지를 B 버퍼로 지정합니다.
    - **`F`:** A와 B 이미지를 빠르게 전환하며 비교합니다.
    - **`W`:** 와이프(Wipe) 모드로 전환하여 슬라이더로 두 이미지를 비교합니다.
- **Region Render (관심 영역 렌더):**
    - **`Shift + 좌클릭 드래그`:** 사각형 영역을 지정하여 해당 부분만 다시 렌더링합니다. 라이팅이나 재질의 특정 부분만 빠르게 확인할 때 필수적입니다.
- **Pixel Probe (픽셀 정보 확인):**
    - **`우클릭`** 후 드래그하면 커서 위치의 픽셀 정보를 실시간으로 볼 수 있습니다. RGBA 값은 물론, 현재 선택된 AOV 채널의 데이터 값까지 정밀하게 확인할 수 있어 디버깅에 매우 유용합니다.
- **카탈로그(Catalog):**
    - "It" 뷰어 내에서 여러 버전의 렌더 이미지를 저장하고 관리할 수 있는 기능입니다. 여러 라이팅 버전을 저장해두고 비교 분석할 때 편리합니다.

---

### **4. 핵심 렌더 세팅: 샘플링과 노이즈 제어**

Maya의 **Render Settings** 창에서 렌더러를 **RenderMan**으로 선택하고 **Sampling** 탭으로 이동합니다. 이곳에서 렌더링의 퀄리티와 속도의 균형을 맞춥니다.

- `Max Samples`: 한 픽셀에 보낼 수 있는 '탐험가'의 최대 인원수입니다. 높을수록 노이즈가 줄지만 렌더 시간이 길어집니다. (기본값: 128 또는 256)
- `Pixel Variance`: 노이즈를 얼마나 허용할 것인지 정하는 '임계값'입니다. RenderMan은 렌더링 중 픽셀의 노이즈가 이 값보다 높으면, `Max Samples` 한도 내에서 '탐험가'를 추가로 보냅니다. 값이 낮을수록(예: 0.01) 퀄리티에 민감해져 더 깨끗한 이미지를 만듭니다.
- `Denoise`: RenderMan의 가장 강력한 무기 중 하나인 **AI 기반 노이즈 제거 기능**입니다. 렌더링 시 이미지와 함께 노멀, 뎁스, 알베도 등 추가 데이터를 함께 출력한 뒤, 이를 분석하여 놀라울 정도로 정확하게 노이즈만 제거해 줍니다. 이 기능을 사용하면 상대적으로 낮은 샘플 값으로 렌더링하고도 매우 깨끗한 최종 결과물을 얻을 수 있어, **작업 시간을 획기적으로 단축**시킬 수 있습니다.

**전문가의 팁:** **`Pixel Variance`를 먼저 목표 퀄리티에 맞게 설정(예: 0.025)한 후, `Max Samples`를 충분히 높게(예: 512) 주어 렌더러가 스스로 필요한 만큼 샘플을 사용하게 하는 것**이 현대적인 워크플로우입니다.

### **오늘의 실습 과제**

1. 간단한 씬(기본 도형들)을 준비하고 **PxrDomeLight**를 하나 설치합니다.
2. **"It" 뷰어의 컬러 스페이스를 Maya의 ACES 1.2로 설정**합니다.
3. `Pixel Variance`를 0.05로 고정하고, `Max Samples`를 32, 128, 512로 변경하며 렌더링합니다.
    - "It"의 **Snapshot(`S`)**과 **A/B 비교(`F`, `W`)** 기능을 사용하여 노이즈 차이와 렌더링 시간을 비교, 분석해 보세요.
4. `Max Samples`를 64로 낮게 설정하고, **Denoise 기능을 켰을 때와 껐을 때의 최종 결과물**을 비교해 보세요. "It" 뷰어에서 Denoise 전/후 이미지를 비교하며 그 효과를 직접 확인합니다.